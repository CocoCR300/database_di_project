// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Restify.API.Data;

#nullable disable

namespace Restify.API.Migrations
{
    [DbContext(typeof(RestifyDbContext))]
    partial class RestifyDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            MySqlModelBuilderExtensions.AutoIncrementColumns(modelBuilder);

            modelBuilder.Entity("Restify.API.Models.Booking", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("bookingId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("CustomerId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("customerPersonId");

                    b.Property<uint>("LodgingId")
                        .HasColumnType("int unsigned");

                    b.HasKey("Id");

                    b.HasIndex("CustomerId");

                    b.HasIndex("LodgingId");

                    b.ToTable("Booking");
                });

            modelBuilder.Entity("Restify.API.Models.Lodging", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("lodgingId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasMaxLength(300)
                        .HasColumnType("varchar(300)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("varchar(1000)");

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("varchar(200)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<uint>("OwnerId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("ownerPersonId");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("CHAR(50)")
                        .HasColumnName("lodgingType");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("Lodging");
                });

            modelBuilder.Entity("Restify.API.Models.LodgingPerk", b =>
                {
                    b.Property<uint>("LodgingId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("PerkId")
                        .HasColumnType("int unsigned");

                    b.HasKey("LodgingId", "PerkId");

                    b.HasIndex("PerkId");

                    b.ToTable("LodgingPerk");
                });

            modelBuilder.Entity("Restify.API.Models.Payment", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("paymentId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<uint?>("BookingId")
                        .HasColumnType("int unsigned");

                    b.Property<DateTimeOffset>("DateAndTime")
                        .HasColumnType("datetime(6)");

                    b.Property<string>("InvoiceImageFileName")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId")
                        .IsUnique();

                    b.ToTable("Payment");
                });

            modelBuilder.Entity("Restify.API.Models.Perk", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("perkId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Perk", (string)null);
                });

            modelBuilder.Entity("Restify.API.Models.Person", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("personId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("EmailAddress")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("varchar(150)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.HasKey("Id");

                    b.HasIndex("UserName")
                        .IsUnique();

                    b.ToTable("Person");
                });

            modelBuilder.Entity("Restify.API.Models.PhoneNumber", b =>
                {
                    b.Property<string>("Number")
                        .IsRequired()
                        .HasColumnType("longtext");

                    b.ToTable("PhoneNumber");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Restify.API.Models.Photo", b =>
                {
                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("CHAR(75)");

                    b.Property<byte>("Ordering")
                        .HasColumnType("tinyint unsigned");

                    b.ToTable("Photo");

                    b.UseTpcMappingStrategy();
                });

            modelBuilder.Entity("Restify.API.Models.Room", b =>
                {
                    b.Property<uint>("LodgingId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("Number")
                        .HasColumnType("int unsigned")
                        .HasColumnName("roomNumber");

                    b.Property<uint>("TypeId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("roomTypeId");

                    b.HasKey("LodgingId", "Number");

                    b.HasIndex("TypeId");

                    b.ToTable("Room");
                });

            modelBuilder.Entity("Restify.API.Models.RoomBooking", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("roomBookingId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("BookingId")
                        .HasColumnType("int unsigned");

                    b.Property<decimal>("Cost")
                        .HasColumnType("decimal(65,30)");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(65,30)");

                    b.Property<DateOnly>("EndDate")
                        .HasColumnType("date");

                    b.Property<decimal>("Fees")
                        .HasColumnType("decimal(65,30)");

                    b.Property<uint>("LodgingId")
                        .HasColumnType("int unsigned");

                    b.Property<uint>("RoomNumber")
                        .HasColumnType("int unsigned");

                    b.Property<DateOnly>("StartDate")
                        .HasColumnType("date");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("CHAR(50)");

                    b.HasKey("Id");

                    b.HasIndex("BookingId");

                    b.HasIndex("LodgingId", "RoomNumber");

                    b.ToTable("RoomBooking");
                });

            modelBuilder.Entity("Restify.API.Models.RoomType", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("RoomTypeId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<uint>("Capacity")
                        .HasColumnType("int unsigned");

                    b.Property<decimal>("Fees")
                        .HasColumnType("decimal(65,30)");

                    b.Property<uint>("LodgingId")
                        .HasColumnType("int unsigned");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(75)
                        .HasColumnType("varchar(75)");

                    b.Property<decimal>("PerNightPrice")
                        .HasColumnType("decimal(65,30)");

                    b.HasKey("Id");

                    b.HasIndex("LodgingId");

                    b.ToTable("RoomType");
                });

            modelBuilder.Entity("Restify.API.Models.User", b =>
                {
                    b.Property<string>("Name")
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("userName");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("varchar(100)");

                    b.Property<uint>("RoleId")
                        .HasColumnType("int unsigned")
                        .HasColumnName("userRoleId");

                    b.HasKey("Name");

                    b.HasIndex("RoleId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Restify.API.Models.UserRole", b =>
                {
                    b.Property<uint>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int unsigned")
                        .HasColumnName("userRoleId");

                    MySqlPropertyBuilderExtensions.UseMySqlIdentityColumn(b.Property<uint>("Id"));

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar(50)");

                    b.HasKey("Id");

                    b.ToTable("UserRole");
                });

            modelBuilder.Entity("Restify.API.Models.Booking", b =>
                {
                    b.HasOne("Restify.API.Models.Person", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Restify.API.Models.Lodging", "Lodging")
                        .WithMany()
                        .HasForeignKey("LodgingId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Customer");

                    b.Navigation("Lodging");
                });

            modelBuilder.Entity("Restify.API.Models.Lodging", b =>
                {
                    b.HasOne("Restify.API.Models.Person", "Owner")
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.OwnsMany("Restify.API.Models.LodgingPhoneNumber", "PhoneNumbers", b1 =>
                        {
                            b1.Property<uint>("LodgingId")
                                .HasColumnType("int unsigned");

                            b1.Property<string>("Number")
                                .HasColumnType("CHAR(30)")
                                .HasColumnName("phoneNumber");

                            b1.HasKey("LodgingId", "Number");

                            b1.ToTable("LodgingPhoneNumber");

                            b1.HasDiscriminator().HasValue("LodgingPhoneNumber");

                            b1.WithOwner()
                                .HasForeignKey("LodgingId");
                        });

                    b.OwnsMany("Restify.API.Models.LodgingPhoto", "Photos", b1 =>
                        {
                            b1.Property<string>("FileName")
                                .HasColumnType("varchar(255)");

                            b1.Property<uint>("LodgingId")
                                .HasColumnType("int unsigned");

                            b1.Property<byte>("Ordering")
                                .HasColumnType("tinyint unsigned");

                            b1.HasKey("FileName");

                            b1.HasIndex("LodgingId");

                            b1.ToTable("LodgingPhoto");

                            b1.HasDiscriminator().HasValue("LodgingPhoto");

                            b1.WithOwner()
                                .HasForeignKey("LodgingId");
                        });

                    b.Navigation("Owner");

                    b.Navigation("PhoneNumbers");

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Restify.API.Models.LodgingPerk", b =>
                {
                    b.HasOne("Restify.API.Models.Lodging", null)
                        .WithMany()
                        .HasForeignKey("LodgingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restify.API.Models.Perk", null)
                        .WithMany()
                        .HasForeignKey("PerkId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Restify.API.Models.Payment", b =>
                {
                    b.HasOne("Restify.API.Models.Booking", null)
                        .WithOne("Payment")
                        .HasForeignKey("Restify.API.Models.Payment", "BookingId");
                });

            modelBuilder.Entity("Restify.API.Models.Person", b =>
                {
                    b.HasOne("Restify.API.Models.User", "User")
                        .WithOne("Person")
                        .HasForeignKey("Restify.API.Models.Person", "UserName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Restify.API.Models.PersonPhoneNumber", "PhoneNumbers", b1 =>
                        {
                            b1.Property<uint>("PersonId")
                                .HasColumnType("int unsigned");

                            b1.Property<string>("Number")
                                .HasColumnType("CHAR(30)")
                                .HasColumnName("phoneNumber");

                            b1.HasKey("PersonId", "Number");

                            b1.ToTable("PersonPhoneNumber");

                            b1.HasDiscriminator().HasValue("PersonPhoneNumber");

                            b1.WithOwner()
                                .HasForeignKey("PersonId");
                        });

                    b.Navigation("PhoneNumbers");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Restify.API.Models.Room", b =>
                {
                    b.HasOne("Restify.API.Models.Lodging", "Lodging")
                        .WithMany("Rooms")
                        .HasForeignKey("LodgingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restify.API.Models.RoomType", "Type")
                        .WithMany()
                        .HasForeignKey("TypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Lodging");

                    b.Navigation("Type");
                });

            modelBuilder.Entity("Restify.API.Models.RoomBooking", b =>
                {
                    b.HasOne("Restify.API.Models.Booking", "Booking")
                        .WithMany("RoomBookings")
                        .HasForeignKey("BookingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Restify.API.Models.Room", "Room")
                        .WithMany()
                        .HasForeignKey("LodgingId", "RoomNumber")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Booking");

                    b.Navigation("Room");
                });

            modelBuilder.Entity("Restify.API.Models.RoomType", b =>
                {
                    b.HasOne("Restify.API.Models.Lodging", null)
                        .WithMany("RoomTypes")
                        .HasForeignKey("LodgingId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.OwnsMany("Restify.API.Models.RoomTypePhoto", "Photos", b1 =>
                        {
                            b1.Property<string>("FileName")
                                .HasColumnType("varchar(255)");

                            b1.Property<byte>("Ordering")
                                .HasColumnType("tinyint unsigned");

                            b1.Property<uint>("RoomTypeId")
                                .HasColumnType("int unsigned");

                            b1.HasKey("FileName");

                            b1.HasIndex("RoomTypeId");

                            b1.ToTable("RoomTypePhoto");

                            b1.HasDiscriminator().HasValue("RoomTypePhoto");

                            b1.WithOwner()
                                .HasForeignKey("RoomTypeId");
                        });

                    b.Navigation("Photos");
                });

            modelBuilder.Entity("Restify.API.Models.User", b =>
                {
                    b.HasOne("Restify.API.Models.UserRole", "Role")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Role");
                });

            modelBuilder.Entity("Restify.API.Models.Booking", b =>
                {
                    b.Navigation("Payment");

                    b.Navigation("RoomBookings");
                });

            modelBuilder.Entity("Restify.API.Models.Lodging", b =>
                {
                    b.Navigation("RoomTypes");

                    b.Navigation("Rooms");
                });

            modelBuilder.Entity("Restify.API.Models.User", b =>
                {
                    b.Navigation("Person")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
